diff --git a/drivers/input/touchscreen/ti_am335x_tsc.c b/drivers/input/touchscreen/ti_am335x_tsc.c
index ed83043..310045c 100644
--- a/drivers/input/touchscreen/ti_am335x_tsc.c
+++ b/drivers/input/touchscreen/ti_am335x_tsc.c
@@ -13,7 +13,6 @@
  * GNU General Public License for more details.
  */
 
-
 #include <linux/init.h>
 #include <linux/kernel.h>
 #include <linux/err.h>
@@ -54,6 +53,7 @@ struct titsc {
 	u32			bit_xp, bit_xn, bit_yp, bit_yn;
 	u32			inp_xp, inp_xn, inp_yp, inp_yn;
 	unsigned int 		prevZ;
+	unsigned int 		down_count;
 };
 
 static unsigned int titsc_readl(struct titsc *ts, unsigned int reg)
@@ -293,9 +293,9 @@ static irqreturn_t titsc_irq(int irq, void *dev)
 			deltaZ= z - ts_dev->prevZ;
 			// save the last z calculated :
 			ts_dev->prevZ=z;
-			pr_debug("x %d y %d deltaZ %d\n", x, y, deltaZ);
+			pr_debug("x %d y %d z %d deltaZ %d count %d\n", x, y, z, deltaZ, ts_dev->down_count);
 
-			if (z <= MAX_12BIT && deltaZ>=0  && deltaZ<=10 ) {
+			if (z <= MAX_12BIT && deltaZ>=0  && deltaZ<=10 && ts_dev->down_count > 3) {
 				input_report_abs(input_dev, ABS_X, x);
 				input_report_abs(input_dev, ABS_Y, y);
 				input_report_abs(input_dev, ABS_PRESSURE, z);
@@ -318,10 +318,12 @@ static irqreturn_t titsc_irq(int irq, void *dev)
 		fsm = titsc_readl(ts_dev, REG_ADCFSM);
 		if (fsm == ADCFSM_STEPID) {
 			ts_dev->pen_down = false;
+			ts_dev->down_count = 0;
 			input_report_key(input_dev, BTN_TOUCH, 0);
 			input_report_abs(input_dev, ABS_PRESSURE, 0);
 			input_sync(input_dev);
 		} else {
+			ts_dev->down_count++;
 			ts_dev->pen_down = true;
 		}
 		irqclr |= IRQENB_PENUP;
